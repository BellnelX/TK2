import tkinter as tk
from tkinter import ttk, messagebox
import sqlite3

con = sqlite3.connect("pessoas.db")
cur = con.cursor()

cur.execute("""
CREATE TABLE IF NOT EXISTS pessoas (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    nome TEXT NOT NULL,
    endereco TEXT
)
""")
con.commit()

def salvar_nome():
    nome = entrada_nome.get().strip()
    endereco = entrada_endereco.get().strip()

    if nome == "" or endereco == "":
        messagebox.showwarning("Atenção", "Digite o nome e o endereço antes de salvar!")
        return

    cur.execute("INSERT INTO pessoas (nome, endereco) VALUES (?, ?)", (nome, endereco))
    con.commit()

    entrada_nome.delete(0, tk.END)
    entrada_endereco.delete(0, tk.END)

    messagebox.showinfo("Sucesso", f"Nome '{nome}' salvo com sucesso! e endereço '{endereco}' salvo com sucesso!")
    atualizar_grade()

def atualizar_grade():

    for item in tabela.get_children():
        tabela.delete(item)

    cur.execute("SELECT id, nome, endereco FROM pessoas ORDER BY id DESC")
    for row in cur.fetchall():
        tabela.insert("", tk.END, values=row)

def excluir_registro():
    item_selecionado = tabela.focus()
    if not item_selecionado:
        messagebox.showwarning("Atenção", "Selecione um registro para excluir!")
        return

    valores = tabela.item(item_selecionado, "values")
    id_registro = valores[0]

    confirmar = messagebox.askyesno("Confirmar", f"Deseja realmente excluir o ID {id_registro}?")
    if not confirmar:
        return

    cur.execute("DELETE FROM pessoas WHERE id = ?", (id_registro,))
    con.commit()

    messagebox.showinfo("Sucesso", f"Registro ID {id_registro} excluído com sucesso!")
    atualizar_grade()

def editar_registro():
    item_selecionado = tabela.focus()
    if not item_selecionado:
        messagebox.showwarning("Atenção", "Selecione um registro para editar!")
        return

    valores = tabela.item(item_selecionado, "values")
    global id_em_edicao
    id_em_edicao = valores[0]

    entrada_nome.delete(0, tk.END)
    entrada_nome.insert(0, valores[1])

    entrada_endereco.delete(0, tk.END)
    entrada_endereco.insert(0, valores[2])

    botao_salvar.config(state="disabled")
    botao_editar.config(state="disabled")

    botao_salvar_edicao.config(state="normal")
    messagebox.showinfo("Modo de edição", f"Editando registro ID {id_em_edicao}")

def salvar_edicao():
    nome = entrada_nome.get().strip()
    endereco = entrada_endereco.get().strip()

    if nome == "" or endereco == "":
        messagebox.showwarning("Atenção", "Digite o nome e o endereço!")
        return

    cur.execute("UPDATE pessoas SET nome = ?, endereco = ? WHERE id = ?", (nome, endereco, id_em_edicao))
    con.commit()

    messagebox.showinfo("Sucesso", f"Registro ID {id_em_edicao} atualizado com sucesso!")

    entrada_nome.delete(0, tk.END)
    entrada_endereco.delete(0, tk.END)

    botao_salvar.config(state="normal")
    botao_editar.config(state="normal")
    botao_salvar_edicao.config(state="disabled")

    atualizar_grade()



janela = tk.Tk()
janela.title("Cadastro de Nomes")
janela.geometry("400x300")


rotulo = tk.Label(janela, text="Digite o nome:")
rotulo.pack(pady=5)

entrada_nome = tk.Entry(janela, width=30)
entrada_nome.pack(pady=5)

rotulo_endereco = tk.Label(janela, text="Digite o endereço:")
rotulo_endereco.pack(pady=5)

entrada_endereco = tk.Entry(janela, width=30)
entrada_endereco.pack(pady=5)


frame_botoes = tk.Frame(janela)
frame_botoes.pack(pady=5)

botao_salvar = tk.Button(frame_botoes, text="Salvar", command=salvar_nome)
botao_salvar.grid(row=0, column=0, padx=5)

botao_sair = tk.Button(frame_botoes, text="Fechar", command=janela.destroy)
botao_sair.grid(row=0, column=1, padx=5)

botao_editar = tk.Button(frame_botoes, text="Editar", command=editar_registro)
botao_editar.grid(row=0, column=2, padx=5)

botao_excluir = tk.Button(frame_botoes, text="Excluir", command=excluir_registro)
botao_excluir.grid(row=0, column=3, padx=5)


tabela = ttk.Treeview(janela, columns=("id", "nome", "endereco"), show="headings", height=8)
tabela.heading("id", text="ID")
tabela.heading("nome", text="Nome")
tabela.heading("endereco", text="Endereço")

tabela.column("id", width=40, anchor="center")
tabela.column("nome", width=150)
tabela.column("endereco", width=180)
tabela.pack(pady=10)


atualizar_grade()

janela.mainloop()

con.close()
